parameters:
- name: env
  type: string

resources:
  repositories:
  - repository: lp-common
    type: git
    name: learning-platform/lp-common

variables:
- group: appDev-pb-public
- group: lp-opencast-public
- ${{ if eq(parameters.env, 'dev') }}:
  - group: common-dev-secret
  - group: lp-opencast-dev-public
  - group: lp-opencast-dev-secret

jobs:
- deployment: deployResourcesJob
  displayName: 'Deploy Environment Job'
  pool:
    vmImage: ubuntu-20.04
  environment: '$(resourceGroupName)'
  variables:
    # databaseServerType: 'mysql'
    # dbConnection: 'mysql'
    # dbDatabase: '$(containerRepositoryName)'
    # dbPort: 3306
    # dbUsername: '$(containerRepositoryName)'
    applicationGatewaySubnetAddressRange: '$(virtualNetworkAddressRangePrefix).0/27'
    applicationSubnetAddressRange: '$(virtualNetworkAddressRangePrefix).32/27'
    bastionHostSubnetAddressRange: '$(virtualNetworkAddressRangePrefix).96/27'
    dataSubnetAddressRange: '$(virtualNetworkAddressRangePrefix).64/27'
    virtualNetworkAddressRange: '$(virtualNetworkAddressRangePrefix).0/24'

  strategy:
      runOnce:
        deploy:
          steps:

          - checkout: self # Multiple repos: files will be downloaded to ${Build.SourcesDirectory}/lp-opencast folder.
          - checkout: lp-common # Multiple repos: files will be downloaded to ${Build.SourcesDirectory}/lp-common folder.

          - template: set-resource-names-steps.yml
            parameters:
              applicationGatewayNameVariableName: 'applicationGatewayName'
              applicationGatewayNetworkSecurityGroupNameVariableName: 'applicationGatewayNetworkSecurityGroupName'
              applicationGatewaySubnetNameVariableName: 'applicationGatewaySubnetName'
              applicationGatewayUserAssignedIdentityNameVariableName: 'applicationGatewayUserAssignedIdentityName'
              applicationGatewayPublicIpAddressNameVariableName: 'applicationGatewayPublicIpAddressName'
              applicationNetworkSecurityGroupNameVariableName: 'applicationNetworkSecurityGroupName'
              applicationSubnetNameVariableName: 'applicationSubnetName'
              dataNetworkSecurityGroupNameVariableName: 'dataNetworkSecurityGroupName'
              dataSubnetNameVariableName:  'dataSubnetName'
              environmentName: '$(environmentName)'
              keyVaultNameVariableName: 'keyVaultName'
              logAnalyticsWorkspaceNameVariableName: 'logAnalyticsWorkspaceName'
              solutionName: '$(solutionName)'
              virtualNetworkNameVariableName: 'virtualNetworkName'


          - script: |
              echo "applicationGatewayNetworkSecurityGroupName = $(applicationGatewayNetworkSecurityGroupName)"
              echo "applicationNetworkSecurityGroupName = $(applicationNetworkSecurityGroupName)"
              echo "dataNetworkSecurityGroupName = $(dataNetworkSecurityGroupName)"

              echo "virtualNetworkName = $(virtualNetworkName)"

              echo "applicationGatewaySubnetName = $(applicationGatewaySubnetName)"
              echo "applicationSubnetName = $(applicationSubnetName)"
              echo "dataSubnetName = $(dataSubnetName)"

              echo "keyVaultName = $(keyVaultName)"
              echo "logAnalyticsWorkspaceName = $(logAnalyticsWorkspaceName)"

              echo "applicationGatewayName = $(applicationGatewayName)"
              echo "applicationGatewayPublicIpAddressName = $(applicationGatewayPublicIpAddressName)"
              echo "applicationGatewayUserAssignedIdentityName = $(applicationGatewayUserAssignedIdentityName)"

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Log Analytics Workspace Resource'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(serviceConnectionName)'
              subscriptionId: '$(subscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(locationName)'
              templateLocation: 'Linked artifact'
              csmFile: 'lp-common/azure/arm-templates/deploy-log-analytics-workspace.json'
              overrideParameters: >-
                -logAnalyticsWorkspaceName "$(logAnalyticsWorkspaceName)"
                -logAnalyticsWorkspaceRetentionDays "$(logAnalyticsWorkspaceRetentionDays)"
                -resourceTags "$(resourceTags)"
              deploymentMode: 'Incremental'
              deploymentName: '$(solutionName)_log-analytics-workspace_$(Build.BuildNumber)'

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Virtual Network Resource'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(serviceConnectionName)'
              subscriptionId: '$(subscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(locationName)'
              templateLocation: 'Linked artifact'
              csmFile: 'lp-opencast/azure/arm-templates/deploy-virtual-network.json'
              overrideParameters: >-
                -applicationGatewayNetworkSecurityGroupName "$(applicationGatewayNetworkSecurityGroupName)"
                -applicationGatewaySubnetAddressRange "$(applicationGatewaySubnetAddressRange)"
                -applicationGatewaySubnetName "$(applicationGatewaySubnetName)"
                -applicationNetworkSecurityGroupName "$(applicationNetworkSecurityGroupName)"
                -applicationSubnetAddressRange "$(applicationSubnetAddressRange)"
                -applicationSubnetName "$(applicationSubnetName)"
                -bastionHostSubnetAddressRange "$(bastionHostSubnetAddressRange)"
                -dataNetworkSecurityGroupName "$(dataNetworkSecurityGroupName)"
                -dataSubnetName "$(dataSubnetName)"
                -dataSubnetAddressRange "$(dataSubnetAddressRange)"
                -deniedIpAddressList "$(deniedIpAddressList)"
                -resourceTags "$(resourceTags)"
                -virtualNetworkAddressRange "$(virtualNetworkAddressRange)"
                -virtualNetworkName "$(virtualNetworkName)"
              deploymentMode: 'Incremental'
              deploymentName: '$(solutionName)_virtual-network_$(Build.BuildNumber)'

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Application Gateway Resource'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(serviceConnectionName)'
              subscriptionId: '$(subscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(locationName)'
              templateLocation: 'Linked artifact'
              csmFile: 'lp-opencast/azure/arm-templates/deploy-application-gateway.json'
              overrideParameters: >-
                -applicationGatewayName "$(applicationGatewayName)"
                -keyVaultCertificateName "$(applicationGatewayKeyVaultCertificateName)"
                -keyVaultName "$(keyVaultName)"
                -logAnalyticsWorkspaceName "$(logAnalyticsWorkspaceName)"
                -publicIpAddressDomainNameLabel "OpenCast-dev"
                -publicIpAddressName "$(applicationGatewayPublicIpAddressName)"
                -userAssignedIdentityName "$(applicationGatewayUserAssignedIdentityName)"
                -virtualNetworkName "$(virtualNetworkName)"
                -virtualNetworkSubnetName "$(applicationGatewaySubnetName)"
                -resourceTags "$(resourceTags)"
              deploymentMode: 'Incremental'
              deploymentName: '$(solutionName)_virtual-network_$(Build.BuildNumber)'


          # - task: AzureCLI@2
          #   displayName: 'Set Database Server FQDN Variable'
          #   inputs:
          #     azureSubscription: '$(serviceConnectionName)'
          #     scriptType: 'bash'
          #     scriptLocation: 'scriptPath'
          #     scriptPath: 'lp-common/azure/scripts/set_database_server_fqdn_variable_v2.sh'
          #     arguments: >-
          #       --database-server-name "$(databaseServerName)"
          #       --resource-group-name "$(resourceGroupName)"
          #       --subscription-name "$(subscriptionName)"
          #       --variable-name "databaseServerFqdn"

          # - task: AzureCLI@2
          #   displayName: 'Set Alternate Container Repository Tag Variable'
          #   condition: eq(variables['containerRepositoryTag'], 'latest')
          #   inputs:
          #     azureSubscription: '$(serviceConnectionName)'
          #     scriptType: 'bash'
          #     scriptLocation: 'scriptPath'
          #     scriptPath: 'lp-common/azure/scripts/set_alternate_container_repository_tag_variable.sh'
          #     arguments: >-
          #       --container-registry-name "$(containerRegistryName)"
          #       --container-repository-name "$(containerRepositoryName)"
          #       --container-repository-tag "$(containerRepositoryTag)"
          #       --variable-name "containerRepositoryTag"
          #     failOnStandardError: true

          
