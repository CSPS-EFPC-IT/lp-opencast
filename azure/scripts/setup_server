#!/bin/bash
#
# Setup OpenCast Server.
# This script must be run as root (ex.: sudo sh ./[script_name])
# Style Guide: https://google.github.io/styleguide/shellguide.html

# Parameters: all manadatory and must be prefixed with "--" on command line.
declare -A parameters=( \
  [app_opensearch_java_opts]="" \
  [app_org_opencastproject_db_jdbc_pass]="" \
  [app_org_opencastproject_db_jdbc_url]="" \
  [app_org_opencastproject_db_jdbc_user]="" \
  [app_org_opencastproject_download_url]="" \
  [app_org_opencastproject_security_admin_pass]="" \
  [app_org_opencastproject_security_admin_user]="" \
  [app_org_opencastproject_security_digest_pass]="" \
  [app_org_opencastproject_security_digest_user]="" \
  [app_org_opencastproject_server_url_admin]="" \
  [app_org_opencastproject_server_url_presentation]="" \
  [app_org_opencastproject_server_url_worker]="" \
  [app_prop_org_opencastproject_admin_ui_url]=""\
  [app_prop_org_opencastproject_engage_ui_url]=""\
  [containerRepositoryRootName]=""\
  [containerRepositoryTag]=""\
  [db_server_admin_password]="" \
  [db_server_admin_username]="" \
  [db_server_db_name]="" \
  [db_server_fqdn]="" \
  [server_admin_email]="" \
  [server_fqdn]="" \
  [server_reboot_utc_time]="" \
  [server_resource_name]="" \
  [smtp_server_fqdn]="" \
  [smtp_server_from_address]="" \
  [smtp_server_password]="" \
  [smtp_server_port]="" \
  [smtp_server_username]="" \
)

# Functions

# All libraries not available at build time.
# shellcheck source=/dev/null
source ./logger.sh
# shellcheck source=/dev/null
source ./mysql.sh
# shellcheck source=/dev/null
source ./utils.sh

function main() {
  utils::set_exit_trap
  logger::title "Start of $0"

  #############################################################################

  logger::title "Parse Input Parameters"
  utils::parse_parameters "$@"

  logger::title "Upgrade Server and Remove Unused Packages"
  ./upgrade_server

  logger::title "Install Unattended Upgrade Tools"
  ./install_unattended_upgrade_tools \
    --server_admin_email "${parameters[server_admin_email]}" \
    --server_fqdn "${parameters[server_fqdn]}" \
    --server_reboot_utc_time "${parameters[server_reboot_utc_time]}" \
    --server_resource_name "${parameters[server_resource_name]}" \
    --smtp_server_fqdn "${parameters[smtp_server_fqdn]}" \
    --smtp_server_from_address "${parameters[smtp_server_from_address]}" \
    --smtp_server_password "${parameters[smtp_server_password]}" \
    --smtp_server_port "${parameters[smtp_server_port]}" \
    --smtp_server_username "${parameters[smtp_server_username]}"

  logger::title "Install Application Dependencies"
  apt update
  apt install -y \
    docker-compose \
    mysql-client

  logger::debug "whoami = $(whoami)"
  logger::debug "Before - pwd = $(pwd)"
  cd "${HOME}"
  logger::debug "After - pwd = $(pwd)"

  if [[ -n "${HOME}" ]]; then
    HOME="/root"
  fi

  logger::title "Create Database and credentials"
  # mysql::create_database_and_credentials \
  #   "${parameters[db_server_fqdn]}" \
  #   "${parameters[db_server_admin_username]}" \
  #   "${parameters[db_server_admin_password]}" \
  #   "${parameters[app_org_opencastproject_db_jdbc_user]}" \
  #   "${parameters[app_org_opencastproject_db_jdbc_pass]}"

 mysql::create_user_options_file \
    "${parameters[db_server_admin_username]}" \
    "${parameters[db_server_admin_password]}" \
    "${parameters[db_server_fqdn]}" \
    "3306" \
    "mysql"

  mysql::create_database_if_not_exists \
    "${parameters[app_org_opencastproject_db_jdbc_user]}"

  mysql::create_user_if_not_exists \
    "${parameters[app_org_opencastproject_db_jdbc_user]}" \
    "${parameters[app_org_opencastproject_db_jdbc_pass]}"

  mysql::set_user_password \
    "${parameters[app_org_opencastproject_db_jdbc_user]}" \
    "${parameters[app_org_opencastproject_db_jdbc_pass]}"

  mysql::grant_all_privileges \
    "${parameters[app_org_opencastproject_db_jdbc_user]}" \
    "${parameters[app_org_opencastproject_db_jdbc_user]}"

  # mysql::delete_user_options_file

  logger::title "Configure File Shares"
  # Configurer le "file services share". (2)

  logger::title "Create docker-compose environment file"
  ## Créer le fichier d'environnement pour l'application.

  logger::title "Launch the application"
  ## Lancer l'application en arrière plan

  #############################################################################

  logger::title "End of $0"
  utils::unset_exit_trap
}

main "$@"
