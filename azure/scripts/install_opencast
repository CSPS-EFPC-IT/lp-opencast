#!/bin/bash
#
# Install and launch OpenCast.
# This script must be run as root (ex.: sudo sh ./[script_name])
# Style Guide: https://google.github.io/styleguide/shellguide.html

# Parameters: all manadatory and must be prefixed with "--" on command line.
declare -A parameters=( \
  [app_opensearch_java_opts]="" \
  [app_org_opencastproject_db_jdbc_pass]="" \
  [app_org_opencastproject_db_jdbc_url]="" \
  [app_org_opencastproject_db_jdbc_user]="" \
  [app_org_opencastproject_download_url]="" \
  [app_org_opencastproject_security_admin_pass]="" \
  [app_org_opencastproject_security_admin_user]="" \
  [app_org_opencastproject_security_digest_pass]="" \
  [app_org_opencastproject_security_digest_user]="" \
  [app_org_opencastproject_server_url_admin]="" \
  [app_org_opencastproject_server_url_presentation]="" \
  [app_org_opencastproject_server_url_worker]="" \
  [app_prop_org_opencastproject_admin_ui_url]=""\
  [app_prop_org_opencastproject_engage_ui_url]=""\
  [container_repository_root_name]=""\
  [container_repository_tag]=""\
  [database_server_admin_password]="" \
  [database_server_admin_username]="" \
  [database_server_database_name]="" \
  [database_server_fqdn]="" \
  [file_service_share_name]=""\
  [file_service_share_url]=""\
  [storage_account_key]=""\
  [storage_account_name]=""\
)

# Functions

# All libraries not available at build time.
# shellcheck source=/dev/null
source ./logger.sh
#shellcheck source=/dev/null
source ./mysql.sh
#shellcheck source=/dev/null
source ./utils.sh

#######################################
# Create and mount a File Service Share.
# Arguments:
#   The Storage Account name, a string.
#   The Storage Account ney, a string.
#   The File Service Share name, a string.
#   The File Service Share URL, a string.
#   The Path where the File Service Share must be mounted, a string.
# Outputs:
#   Writes message to STDOUT.
#######################################
function mount_file_service_share() {

  # Parameters
  local storage_account_name="$1"
  local storage_account_key="$2"
  local file_service_share_name="$3"
  local file_service_share_url="$4"
  local mount_point_path="$5"

  # Constants
  SMB_CREDENTIALS_FOLDER_PATH="/etc/smbcredentials"
  SMB_CREDENTIALS_FILE_PATH="${SMB_CREDENTIALS_FOLDER_PATH}/${storage_account_name}.cred"
  FILE_SERVICE_SHARE_FQDN="$(echo "$file_service_share_url" | awk -F[/:] '{print $4}')"

  # Variables
  local new_fstab_entry

  logger::info "Creating mount point directory..."
  mkdir -p "${mount_point_path}"

  logger::info "Creating or overwriting credentials file..."
  mkdir -p "${SMB_CREDENTIALS_FOLDER_PATH}"
  echo "username=${storage_account_name}" > "${SMB_CREDENTIALS_FILE_PATH}"
  echo "password=${storage_account_key}" >> "${SMB_CREDENTIALS_FILE_PATH}"
  chmod 600 "${SMB_CREDENTIALS_FILE_PATH}"

  logger::info "Saving mount point configuration..."
  new_fstab_entry="//${FILE_SERVICE_SHARE_FQDN}/${file_service_share_name} ${mount_point_path} cifs nofail,credentials=${SMB_CREDENTIALS_FILE_PATH},dir_mode=0777,file_mode=0777,serverino,nosharesock,actimeo=30"
  if grep -Fq "${new_fstab_entry}" /etc/fstab; then
    logger::warning "Skipped. Mount point configuration already saved."
  else
    echo "${new_fstab_entry}" >> /etc/fstab
    logger::info "fstab file updated."
  fi

  logger::info "Mounting all file system defined in fstab file..."
  mount -a
}

function main() {

  # Variables
  local file_service_share_mount_point_path

  utils::set_exit_trap
  logger::title "Start of $0"

  #############################################################################

  logger::title "Parse Input Parameters"
  utils::parse_parameters "$@"

  logger::title "Install Application Dependencies"
  apt-get install --yes --quiet \
    docker-compose \
    mysql-client

  logger::title "Create Database and credentials"
  mysql::create_database_and_credentials \
    "${parameters[database_server_fqdn]}" \
    "${parameters[database_server_admin_username]}" \
    "${parameters[database_server_admin_password]}" \
    "${parameters[app_org_opencastproject_db_jdbc_user]}" \
    "${parameters[app_org_opencastproject_db_jdbc_pass]}" \
    "${parameters[database_server_database_name]}"

  file_service_share_mount_point_path="/mnt/${parameters[file_service_share_name]}"

  logger::title "Configure File Shares"
  mount_file_service_share \
    "${parameters[storage_account_name]}" \
    "${parameters[storage_account_key]}" \
    "${parameters[file_service_share_name]}" \
    "${parameters[file_service_share_url]}" \
    "${file_service_share_mount_point_path}"

  logger::title "Create required folder structure"
  mkdir -p "${file_service_share_mount_point_path}/data"
  mkdir -p "${file_service_share_mount_point_path}/opensearch"

  logger::title "Update docker-compose mount point path"
  sed -i -e "s|{{FILE_SERVICE_SHARE_MOUNT_POINT_PATH}}|${file_service_share_mount_point_path}|g" docker-compose.yml

  logger::title "Create docker-compose environment file"
  cat <<EOF > config.env
ELASTICSEARCH_SERVER_HOST=opensearch
ORG_OPENCASTPROJECT_DB_JDBC_PASS=${parameters[app_org_opencastproject_db_jdbc_pass]}
ORG_OPENCASTPROJECT_DB_JDBC_URL=${parameters[app_org_opencastproject_db_jdbc_url]}
ORG_OPENCASTPROJECT_DB_JDBC_USER=${parameters[app_org_opencastproject_db_jdbc_user]}
ORG_OPENCASTPROJECT_DB_VENDOR=MariaDB
ORG_OPENCASTPROJECT_DOWNLOAD_URL=${parameters[app_org_opencastproject_download_url]}
ORG_OPENCASTPROJECT_SECURITY_ADMIN_PASS=${parameters[app_org_opencastproject_security_admin_pass]}
ORG_OPENCASTPROJECT_SECURITY_ADMIN_USER=${parameters[app_org_opencastproject_security_admin_user]}
ORG_OPENCASTPROJECT_SECURITY_DIGEST_PASS=${parameters[app_org_opencastproject_security_digest_pass]}
ORG_OPENCASTPROJECT_SECURITY_DIGEST_USER=${parameters[app_org_opencastproject_security_digest_user]}
PROP_ORG_OPENCASTPROJECT_ADMIN_UI_URL=${parameters[app_prop_org_opencastproject_admin_ui_url]}
PROP_ORG_OPENCASTPROJECT_ENGAGE_UI_URL=${parameters[app_prop_org_opencastproject_engage_ui_url]}

ORG_OPENCASTPROJECT_SERVER_URL_ADMIN=${parameters[app_org_opencastproject_server_url_admin]}

ORG_OPENCASTPROJECT_SERVER_URL_PRESENTATION=${parameters[app_org_opencastproject_server_url_presentation]}

DISABLE_INSTALL_DEMO_CONFIG=true
DISABLE_SECURITY_PLUGIN=true
OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
BOOTSTRAP_MEMORY_LOCK=true
DISCOVERY_TYPE=single-node
EOF

  logger::title "Launch the application"
  docker-compose --env-file=config.env -f docker-compose.yml up -d

  #############################################################################

  logger::title "End of $0"
  utils::unset_exit_trap
}

main "$@"
